{"version":3,"file":"static/js/657.3275f413.chunk.js","mappings":"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","sources":["components/Page/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport axios from 'axios';\n\nconst Movies = () => {\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error al obtener detalles de la película:', error);\n      }\n    };\n\n    if (movieId) {\n      fetchMovieDetails();\n    }\n  }, [API_KEY, API_URL, movieId]);\n\n  useEffect(() => {\n    // Lógica para obtener películas populares al cargar el componente...\n    const fetchPopularMovies = async () => {\n      try {\n        const response = await fetch(\n          `${API_URL}/movie/popular?api_key=${API_KEY}`\n        );\n        const data = await response.json();\n        setMovies(data.results);\n      } catch (error) {\n        console.error('Error al obtener películas populares:', error);\n      }\n    };\n\n    fetchPopularMovies();\n  }, [API_KEY, API_URL]);\n\n  // Función para manejar cambios en la barra de búsqueda\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  //Función para realizar la búsqueda\n  const searchMovies = async () => {\n    try {\n      const response = await fetch(\n        `${API_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n      );\n      const data = await response.json();\n      setSearchResults(data.results);\n    } catch (error) {\n      console.error('Error al realizar la búsqueda:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Películas Populares</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Buscar películas...\"\n          value={searchQuery}\n          onChange={handleSearchChange}\n        />\n        <button onClick={searchMovies}>Buscar</button>\n      </div>\n      <ul>\n        {searchQuery\n          ? searchResults.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n              </li>\n            ))\n          : movies.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n              </li>\n            ))}\n      </ul>\n      <div>\n        <div>\n          {movieDetails.poster_path && (\n            <img\n              width=\"100px\"\n              height=\"100px\"\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          )}\n        </div>\n        <h2>{movieDetails.title}</h2>\n        <p>{movieDetails.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n\n////////////////////////////////////////                       el de abajo en uso funcionando\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n\n// const Movies = () => {\n//   const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n//   const API_URL = 'https://api.themoviedb.org/3';\n//   const [movies, setMovies] = useState([]);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     // Lógica para obtener películas populares al cargar el componente...\n//     const fetchPopularMovies = async () => {\n//       try {\n//         const response = await fetch(\n//           `${API_URL}/movie/popular?api_key=${API_KEY}`\n//         );\n//         const data = await response.json();\n//         setMovies(data.results);\n//       } catch (error) {\n//         console.error('Error al obtener películas populares:', error);\n//       }\n//     };\n\n//     fetchPopularMovies();\n//   }, [API_KEY, API_URL]);\n\n//   // Función para manejar cambios en la barra de búsqueda\n//   const handleSearchChange = event => {\n//     setSearchQuery(event.target.value);\n//   };\n\n//   // Función para realizar la búsqueda\n//   const searchMovies = async () => {\n//     try {\n//       const response = await fetch(\n//         `${API_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n//       );\n//       const data = await response.json();\n//       setSearchResults(data.results);\n//     } catch (error) {\n//       console.error('Error al realizar la búsqueda:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Películas Populares</h1>\n//       <div>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Buscar películas...\"\n//           value={searchQuery}\n//           onChange={handleSearchChange}\n//         />\n//         <button onClick={searchMovies}>Buscar</button>\n//       </div>\n//       <ul>\n//         {searchQuery\n//           ? searchResults.map(movie => (\n//               <li key={movie.id}>\n//                 <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n//               </li>\n//             ))\n//           : movies.map(movie => (\n//               <li key={movie.id}>\n//                 <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n//               </li>\n//             ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Movies;\n\n// {\n//   searchQuery\n//     ? searchResults.map(movie => (\n//         <li key={movie.id}>\n//           <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n//         </li>\n//       ))\n//     : movies.map(movie => (\n//         <li key={movie.id}>\n//           <Link to={`/movie/${movie.id}`}>{movie.title}</Link>\n//         </li>\n//       ));\n// }\n"],"names":["API_KEY","API_URL","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","searchResults","setSearchResults","_useState7","_useState8","movieDetails","setMovieDetails","movieId","useParams","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","apply","arguments","fetchPopularMovies","_ref2","_callee2","_context2","fetch","json","results","searchMovies","_ref3","_callee3","_context3","_jsxs","children","_jsx","type","placeholder","value","onChange","event","target","onClick","map","movie","Link","to","id","title","poster_path","width","height","src","alt","overview"],"sourceRoot":""}