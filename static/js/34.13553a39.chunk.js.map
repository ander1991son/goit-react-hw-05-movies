{"version":3,"file":"static/js/34.13553a39.chunk.js","mappings":"uNAmDA,UA/Ca,WACX,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAKFE,GAAiBC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAERC,EAAAA,EAAAA,IAAU,GAADC,OAJpB,+BAKA,WAAAA,OAAUZ,EAAO,qBAAAY,OANjB,qCAOV,KAAD,EAFKL,EAAQC,EAAAK,KAGdd,EAAQQ,EAASO,KAAKhB,MAAMU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE5BQ,QAAQC,MAAM,iDAA6CT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAZ,EAAA,kBAErE,CAACN,IAMJ,OAJAmB,EAAAA,EAAAA,YAAU,WACRjB,GACF,GAAG,CAACA,KAGFkB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGvB,EAAKyB,KAAI,SAAAC,GAAK,OACbJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SACGG,EAAMC,eACLH,EAAAA,EAAAA,KAAA,OACEI,MAAM,QACNC,OAAO,QACPC,IAAG,kCAAAhB,OAAoCY,EAAMC,cAC7CI,IAAKL,EAAMM,UAIjBR,EAAAA,EAAAA,KAAA,UAAAD,SAASG,EAAMM,QACfR,EAAAA,EAAAA,KAAA,OAAAD,SAAMG,EAAMO,cAZLP,EAAMQ,GAaV,QAKf,C","sources":["components/Page/Cast.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  const fetchMovieCast = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error al obtener el reparto de la película:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieCast();\n  }, [fetchMovieCast]);\n\n  return (\n    <div>\n      <h2>Reparto</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <div>\n              {actor.profile_path && (\n                <img\n                  width=\"100px\"\n                  height=\"100px\"\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}\n            </div>\n            <strong>{actor.name}</strong>\n            <div>{actor.character}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\n// const Cast = () => {\n//   const [cast, setCast] = useState([]);\n//   const { movieId } = useParams();\n\n//   const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n//   const API_URL = 'https://api.themoviedb.org/3';\n\n//   const fetchMovieCast = useCallback(async () => {\n//     try {\n//       const response = await axios.get(\n//         `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//       );\n//       setCast(response.data.cast);\n//     } catch (error) {\n//       console.error('Error al obtener el reparto de la película:', error);\n//     }\n//   }, [movieId]);\n\n//   useEffect(() => {\n//     fetchMovieCast();\n//   }, [fetchMovieCast]);\n\n//   return (\n//     <div>\n//       <h2>Reparto</h2>\n//       <ul>\n//         {cast.map(actor => (\n//           <li key={actor.id}>\n//             {actor.name}\n//             {actor.profile_path && (\n//               <img\n//                 width=\"100px\"\n//                 height=\"100px\"\n//                 src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n//                 alt={actor.name}\n//               />\n//             )}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Cast;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","fetchMovieCast","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","useEffect","_jsxs","children","_jsx","map","actor","profile_path","width","height","src","alt","name","character","id"],"sourceRoot":""}