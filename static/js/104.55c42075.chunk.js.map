{"version":3,"file":"static/js/104.55c42075.chunk.js","mappings":"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","sources":["components/Page/Cast.jsx","webpack://react-homework-template/./src/components/Page/MoviesDetails.module.css?a350","components/Page/MoviesDetails.jsx","components/Page/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  const fetchMovieCast = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n      );\n      setCast(response.data.cast);\n    } catch (error) {\n      console.error('Error al obtener el reparto de la película:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieCast();\n  }, [fetchMovieCast]);\n\n  return (\n    <div>\n      <h2>Reparto</h2>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <div>\n              {actor.profile_path && (\n                <img\n                  width=\"100px\"\n                  height=\"100px\"\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              )}\n            </div>\n            <strong>{actor.name}</strong>\n            <div>{actor.character}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\n// const Cast = () => {\n//   const [cast, setCast] = useState([]);\n//   const { movieId } = useParams();\n\n//   const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n//   const API_URL = 'https://api.themoviedb.org/3';\n\n//   const fetchMovieCast = useCallback(async () => {\n//     try {\n//       const response = await axios.get(\n//         `${API_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n//       );\n//       setCast(response.data.cast);\n//     } catch (error) {\n//       console.error('Error al obtener el reparto de la película:', error);\n//     }\n//   }, [movieId]);\n\n//   useEffect(() => {\n//     fetchMovieCast();\n//   }, [fetchMovieCast]);\n\n//   return (\n//     <div>\n//       <h2>Reparto</h2>\n//       <ul>\n//         {cast.map(actor => (\n//           <li key={actor.id}>\n//             {actor.name}\n//             {actor.profile_path && (\n//               <img\n//                 width=\"100px\"\n//                 height=\"100px\"\n//                 src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n//                 alt={actor.name}\n//               />\n//             )}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MoviesDetails_movieDetails__z6fv7\",\"Movieimg\":\"MoviesDetails_Movieimg__j4Hp1\",\"movieinfo\":\"MoviesDetails_movieinfo__EWKOY\",\"movietext\":\"MoviesDetails_movietext__WS6P6\",\"movienavlink\":\"MoviesDetails_movienavlink__mjkjl\"};","import React, { useState, useEffect, useCallback } from 'react';\nimport css from './MoviesDetails.module.css';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {\n  useParams,\n  NavLink,\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  // const location = useLocation();\n  // const backLink = location.state?.from ?? '/books';\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  const fetchMovieDetails = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n      );\n      setMovieDetails(response.data);\n    } catch (error) {\n      console.error('Error al obtener detalles de la película:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovieDetails();\n  }, [fetchMovieDetails]);\n\n  const StyledLink = styled(NavLink)`\n    color: black;\n\n    &.active {\n      color: red;\n    }\n  `;\n\n  return (\n    <div>\n      {/* <Link to=\"/\">\n        <button>Go back</button>\n      </Link> */}\n      <button onClick={() => navigate(-1)}>Go Back</button>\n      <div className={css.movieDetails}>\n        <div>\n          {movieDetails.poster_path && (\n            <img\n              className={css.Movieimg}\n              src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n              alt={movieDetails.title}\n            />\n          )}\n        </div>\n        <div className={css.movieinfo}>\n          <h2>{`${movieDetails.title} (${\n            movieDetails.release_date\n              ? movieDetails.release_date.substring(0, 4)\n              : 'N/A'\n          })`}</h2>\n          <p className={css.movietext}>\n            <strong>User Score:</strong> {movieDetails.vote_average}\n          </p>\n          <p className={css.movietext}>\n            <strong>Overview:</strong> <br />\n            {movieDetails.overview}\n          </p>\n          <p className={css.movietext}>\n            <strong>Genres: </strong>\n            <br />\n            {movieDetails.genres &&\n              movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n\n      <div>\n        <ul className={css.movienavlink}>\n          <h2>Additional Information</h2>\n          <li>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </li>\n          <li>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </li>\n        </ul>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n// import React, { useState, useEffect, useCallback } from 'react';\n// import axios from 'axios';\n// import { useParams, Link, NavLink, Routes, Route } from 'react-router-dom';\n// import Cast from './Cast';\n// import Reviews from './Reviews';\n\n// const MovieDetails = () => {\n//   const [movieDetails, setMovieDetails] = useState({});\n//   const { movieId } = useParams();\n\n//   const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n//   const API_URL = 'https://api.themoviedb.org/3';\n\n//   const fetchMovieDetails = useCallback(async () => {\n//     try {\n//       const response = await axios.get(\n//         `${API_URL}/movie/${movieId}?api_key=${API_KEY}`\n//       );\n//       setMovieDetails(response.data);\n//     } catch (error) {\n//       console.error('Error al obtener detalles de la película:', error);\n//     }\n//   }, [movieId]);\n\n//   useEffect(() => {\n//     fetchMovieDetails();\n//   }, [fetchMovieDetails]);\n\n//   return (\n//     <div>\n//       <Link to=\"/\">{<button>Back</button>}</Link>\n//       <div>\n//         {movieDetails.poster_path && (\n//           <img\n//             width=\"100px\"\n//             height=\"100px\"\n//             src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n//             alt={movieDetails.title}\n//           />\n//         )}\n//       </div>\n//       <h2>{movieDetails.title}</h2>\n//       <p>{movieDetails.overview}</p>\n//       <div>\n//         <NavLink to=\"cast\">Cast</NavLink>\n//         <NavLink to=\"reviews\">Reviews</NavLink>\n//         <Routes>\n//           <Route path=\"cast\" element={<Cast />} />\n//           <Route path=\"reviews\" element={<Reviews />} />\n//         </Routes>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MovieDetails;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { Outlet, useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n  const API_URL = 'https://api.themoviedb.org/3';\n\n  // Utilizar useCallback para envolver la función fetchMovieReviews\n  const fetchMovieReviews = useCallback(async () => {\n    try {\n      const response = await axios.get(\n        `${API_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n      );\n\n      setReviews(response.data.results);\n    } catch (error) {\n      console.error('Error al obtener reseñas de la película:', error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    // Llamar a la función fetchMovieReviews dentro de useEffect\n    fetchMovieReviews();\n  }, [fetchMovieReviews]); // Incluir fetchMovieReviews en la lista de dependencias de useEffect\n\n  return (\n    <div>\n      <h2>Reseñas</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Reviews;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n\n// const Reviews = () => {\n//   const [reviews, setReviews] = useState([]);\n//   const { movieId } = useParams();\n\n//   const API_KEY = 'ecfadc1d9b2290d9331728c2ab535e58';\n//   const API_URL = 'https://api.themoviedb.org/3';\n\n//   async function fetchMovieReviews() {\n//     try {\n//       const response = await axios.get(\n//         `${API_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n//       );\n\n//       setReviews(response.data.results);\n//     } catch (error) {\n//       console.error('Error al obtener reseñas de la película:', error);\n//     }\n//   }\n\n//   useEffect(() => {\n//     fetchMovieReviews();\n//   }, [movieId, fetchMovieReviews]);\n\n//   return (\n//     <div>\n//       <h2>Reseñas</h2>\n//       <ul>\n//         {reviews.map(review => (\n//           <li key={review.id}>\n//             <p>{review.content}</p>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default Reviews;\n"],"names":["_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","fetchMovieCast","useCallback","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","t0","console","error","stop","useEffect","_jsxs","children","_jsx","map","actor","profile_path","width","height","src","alt","name","character","id","movieDetails","setMovieDetails","navigate","useNavigate","fetchMovieDetails","StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","onClick","className","css","poster_path","title","release_date","substring","vote_average","overview","genres","genre","join","to","Routes","Route","path","element","Cast","Reviews","reviews","setReviews","fetchMovieReviews","results","review","content","Outlet"],"sourceRoot":""}